location ~ /restricted/(?<allowed_domain>[\w-.]+)/?.* {
    access_by_lua_block { 
        -- check user domain 
        local headers = ngx.req.get_headers()
        local email = ngx.unescape_uri(ngx.var.cookie_OauthEmail or "") 
        if email:len() == 0 and headers["oauthemail"] then
            email = headers["oauthemail"]
        end
        local oauth_domain = email:match("[^@]+@(.+)") 
        ngx.log(ngx.STDERR, oauth_domain)
        if oauth_domain ~= ngx.var.allowed_domain and oauth_domain ~= "hot-now.com" then 
            ngx.exit(ngx.HTTP_FORBIDDEN) 
        end 

        -- tests passed 
    } 
    proxy_pass http://hotkit:8001;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

}

location ~ /private/?.* { 
    access_by_lua_block { 
        -- check user domain 
        local headers = ngx.req.get_headers()
        local email = ngx.unescape_uri(ngx.var.cookie_OauthEmail or "") 
        if email:len() == 0 and headers["oauthemail"] then
            email = headers["oauthemail"]
        end
        local oauth_domain = email:match("[^@]+@(.+)") 
        ngx.log(ngx.STDERR, oauth_domain)
        if oauth_domain ~= "hot-now.com" then 
            ngx.exit(ngx.HTTP_FORBIDDEN) 
        end 

        -- tests passed 
    } 
    proxy_pass http://hotkit:8001; 
    proxy_redirect off; 
    proxy_set_header Host $host; 
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
    proxy_set_header X-Forwarded-Proto $scheme; 
}

location ~ / {
    proxy_pass http://hotkit:8001;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

